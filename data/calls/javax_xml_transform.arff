@relation javax_xml_transform

@attribute callerFile string
@attribute callerPackage string
@attribute fqCaller string
@attribute fqCalls string

@data
'jenkinsci_____jenkins_____IconTest','lib.layout','lib.layout.IconTest.toString(com.gargoylesoftware.htmlunit.html.HtmlElement)','javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.Transformer.transform'
'apache_____jmeter_____XPathFileContainer','org.apache.jmeter.functions','org.apache.jmeter.functions.XPathFileContainer.load(java.lang.String)','javax.xml.transform.TransformerException | org.xml.sax.SAXException | javax.xml.parsers.ParserConfigurationException | java.io.IOException.toString'
'hibernate_____hibernate-orm_____LocalXsdResolver','org.hibernate.boot.xsd','org.hibernate.boot.xsd.LocalXsdResolver.resolveLocalXsdSchema(java.lang.String)','javax.xml.transform.stream.StreamSource.<init>'
'jenkinsci_____jenkins_____RunMapTest','hudson.model','hudson.model.RunMapTest.reloadWhileBuildIsInProgress()','javax.xml.transform.stream.StreamSource.<init>'
'hibernate_____hibernate-orm_____JaxbCfgProcessor','org.hibernate.boot.cfgxml.internal','org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor.resolveLocalSchema(java.lang.String,java.lang.String)','javax.xml.transform.stream.StreamSource.<init>'
'hibernate_____hibernate-orm_____PersistenceXmlParser','org.hibernate.jpa.boot.internal','org.hibernate.jpa.boot.internal.PersistenceXmlParser.validate(org.w3c.dom.Document)','javax.xml.transform.dom.DOMSource.<init>'
'apereo_____cas_____DefaultRelyingPartyTokenProducer','org.apereo.cas.ws.idp.services','org.apereo.cas.ws.idp.services.DefaultRelyingPartyTokenProducer.serializeRelyingPartyToken(org.w3c.dom.Element)','javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.stream.StreamResult.<init>'
'apache_____jmeter_____XPathUtil','org.apache.jmeter.util','org.apache.jmeter.util.XPathUtil.getNodeContent(org.w3c.dom.Node)','javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.Transformer.transform javax.xml.transform.TransformerException.getMessageAndLocation'
'apache_____jmeter_____XPathUtil','org.apache.jmeter.util','org.apache.jmeter.util.XPathUtil.putValuesForXPathInListUsingSaxon(java.lang.String,java.lang.String,java.util.List<java.lang.String>,boolean,int,java.lang.String)','javax.xml.transform.sax.SAXSource.<init>'
'apache_____jmeter_____XPathUtil','org.apache.jmeter.util','org.apache.jmeter.util.XPathUtil.computeAssertionResult(org.apache.jmeter.assertions.AssertionResult,org.w3c.dom.Document,java.lang.String,boolean)','javax.xml.transform.TransformerException.getMessage'
'apache_____jmeter_____XPathUtil','org.apache.jmeter.util','org.apache.jmeter.util.XPathUtil.formatXml(java.lang.String)','javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.sax.SAXSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.Transformer.transform'
'jenkinsci_____jenkins_____TriggerStartTest','hudson.triggers','hudson.triggers.TriggerStartTest.updateByXmlCallsStartTrue()','javax.xml.transform.stream.StreamSource.<init>'
'jenkinsci_____jenkins_____XMLUtilsTest','jenkins.xml','jenkins.xml.XMLUtilsTest.testSafeTransformDoesNotProcessForeignResources()','javax.xml.transform.stream.StreamSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.TransformerException.getMessage'
'jenkinsci_____jenkins_____XMLUtilsTest','jenkins.xml','jenkins.xml.XMLUtilsTest.testUpdateByXmlIDoesNotFail()','javax.xml.transform.stream.StreamSource.<init> javax.xml.transform.stream.StreamResult.<init>'
'h2oai_____h2o-3_____XMLTestReporter','water.junit','water.junit.XMLTestReporter.XMLTestReporter()','javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.TransformerFactory.newTransformer javax.xml.transform.Transformer.setOutputProperty'
'h2oai_____h2o-3_____XMLTestReporter','water.junit','water.junit.XMLTestReporter.finishTestSuite()','javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.Transformer.transform'
'junit-team_____junit5_____XmlReportAssertions','org.junit.platform.console.tasks','org.junit.platform.console.tasks.XmlReportAssertions.assertValidAccordingToJenkinsSchema(java.lang.String)','javax.xml.transform.stream.StreamSource.<init>'
'jenkinsci_____jenkins_____ItemGroupMixIn','hudson.model','hudson.model.ItemGroupMixIn.createProjectFromXML(java.lang.String,java.io.InputStream)','javax.xml.transform.stream.StreamSource.<init> javax.xml.transform.stream.StreamResult.<init>'
'hazelcast_____hazelcast_____XmlClientConfigBuilderTest','com.hazelcast.client.config','com.hazelcast.client.config.XmlClientConfigBuilderTest.testXSDConfigXML(java.lang.String)','javax.xml.transform.stream.StreamSource.<init>'
'jenkinsci_____jenkins_____AbstractItemSecurityTest','hudson.model','hudson.model.AbstractItemSecurityTest.testUpdateByXmlDoesNotProcessForeignResources()','javax.xml.transform.stream.StreamSource.<init>'
'jenkinsci_____jenkins_____AbstractItemSecurityTest','hudson.model','hudson.model.AbstractItemSecurityTest.testUpdateByXmlDoesNotFail()','javax.xml.transform.stream.StreamSource.<init>'
'libgdx_____libgdx_____TiledMapPacker','com.badlogic.gdx.tiledmappacker','com.badlogic.gdx.tiledmappacker.TiledMapPacker.writeUpdatedTMX(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.files.FileHandle)','javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.TransformerFactory.newTransformer javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.Transformer.transform javax.xml.transform.TransformerConfigurationException.getMessage javax.xml.transform.TransformerException.getMessage'
'hazelcast_____hazelcast_____ConfigXmlGenerator','com.hazelcast.config','com.hazelcast.config.ConfigXmlGenerator.format(java.lang.String,int)','javax.xml.transform.stream.StreamSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.TransformerFactory.setAttribute javax.xml.transform.TransformerFactory.newTransformer javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.transform javax.xml.transform.stream.StreamResult.getWriter javax.xml.transform.stream.StreamResult.getWriter'
'jenkinsci_____jenkins_____Api','hudson.model','hudson.model.Api.doSchema(org.kohsuke.stapler.StaplerRequest,org.kohsuke.stapler.StaplerResponse)','javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.stream.StreamResult.getOutputStream'
'jenkinsci_____jenkins_____MavenTest','hudson.tasks','hudson.tasks.MavenTest.doPassBuildVariablesOptionally()','javax.xml.transform.stream.StreamSource.<init>'
'OpenFeign_____feign_____JAXBDecoder','feign.jaxb','feign.jaxb.JAXBDecoder.decode(feign.Response,java.lang.reflect.Type)','javax.xml.transform.sax.SAXSource.<init>'
'apache_____jmeter_____XPathExtractor','org.apache.jmeter.extractor','org.apache.jmeter.extractor.XPathExtractor.process()','javax.xml.transform.TransformerException.getLocalizedMessage'
'hibernate_____hibernate-orm_____LocalSchema','org.hibernate.boot.jaxb.internal.stax','org.hibernate.boot.jaxb.internal.stax.LocalSchema.resolveLocalSchema(java.net.URL)','javax.xml.transform.stream.StreamSource.<init>'
'looly_____hutool_____XmlUtil','cn.hutool.core.util','cn.hutool.core.util.XmlUtil.write(org.w3c.dom.Node,java.io.Writer,boolean)','javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.stream.StreamResult.<init>'
'looly_____hutool_____XmlUtil','cn.hutool.core.util','cn.hutool.core.util.XmlUtil.write(org.w3c.dom.Node,java.io.OutputStream,java.lang.String,boolean)','javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.stream.StreamResult.<init>'
'looly_____hutool_____XmlUtil','cn.hutool.core.util','cn.hutool.core.util.XmlUtil.transform(javax.xml.transform.Source,javax.xml.transform.Result,java.lang.String,boolean)','javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.TransformerFactory.newTransformer javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.transform'
'jenkinsci_____jenkins_____XMLUtils','jenkins.util.xml','jenkins.util.xml.XMLUtils.safeTransform(javax.xml.transform.Source,javax.xml.transform.Result)','javax.xml.transform.sax.SAXSource.sourceToInputSource javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.sax.SAXTransformerFactory.setFeature javax.xml.transform.sax.SAXSource.<init> javax.xml.transform.Source.getClass javax.xml.transform.TransformerException.<init>'
'jenkinsci_____jenkins_____XMLUtils','jenkins.util.xml','jenkins.util.xml.XMLUtils._transform(javax.xml.transform.Source,javax.xml.transform.Result)','javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.TransformerFactory.setFeature javax.xml.transform.TransformerFactory.newTransformer javax.xml.transform.Transformer.transform'
'jenkinsci_____jenkins_____AbstractItem','hudson.model','hudson.model.AbstractItem.doConfigDotXml(org.kohsuke.stapler.StaplerRequest,org.kohsuke.stapler.StaplerResponse)','javax.xml.transform.stream.StreamSource.<init>'
'jenkinsci_____jenkins_____AbstractItem','hudson.model','hudson.model.AbstractItem.updateByXml(javax.xml.transform.Source)','javax.xml.transform.stream.StreamResult.<init>'
'hibernate_____hibernate-orm_____LocalSchemaLocator','org.hibernate.boot.jaxb.internal.stax','org.hibernate.boot.jaxb.internal.stax.LocalSchemaLocator.resolveLocalSchema(java.net.URL)','javax.xml.transform.stream.StreamSource.<init>'
'hibernate_____hibernate-orm_____MetadataSources','org.hibernate.boot','org.hibernate.boot.MetadataSources.addDocument(org.w3c.dom.Document)','javax.xml.transform.dom.DOMSource.<init>'
'apache_____jmeter_____XPathWrapper','org.apache.jmeter.functions','org.apache.jmeter.functions.XPathWrapper.open(java.lang.String,java.lang.String)','javax.xml.transform.TransformerException | org.xml.sax.SAXException | javax.xml.parsers.ParserConfigurationException | java.io.IOException.getLocalizedMessage'
'jenkinsci_____jenkins_____BuildDiscarderPropertyTest','jenkins.model','jenkins.model.BuildDiscarderPropertyTest.logRotatorField()','javax.xml.transform.stream.StreamSource.<init>'
'hazelcast_____hazelcast_____AbstractXmlConfigHelper','com.hazelcast.config','com.hazelcast.config.AbstractXmlConfigHelper.schemaValidation(org.w3c.dom.Document)','javax.xml.transform.stream.StreamSource.<init> javax.xml.transform.stream.StreamSource.<init> javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.sax.SAXSource.<init> javax.xml.transform.stream.StreamSource.getInputStream'
'jenkinsci_____jenkins_____UpdateViewCommand','hudson.cli','hudson.cli.UpdateViewCommand.run()','javax.xml.transform.stream.StreamSource.<init>'
'spring-projects_____spring-boot_____SampleWsApplicationTests','sample.webservices','sample.webservices.SampleWsApplicationTests.testSendingHolidayRequest()','javax.xml.transform.stream.StreamSource.<init> javax.xml.transform.stream.StreamResult.<init>'
'antlr_____antlr4_____BaseCSharpTest','org.antlr.v4.test.runtime.csharp','org.antlr.v4.test.runtime.csharp.BaseCSharpTest.createProject()','javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.Transformer.transform'
'mikepenz_____Android-Iconics_____StringFieldsGenerator','','.StringFieldsGenerator.generate(com.mikepenz.iconics.typeface.ITypeface)','javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.Transformer.transform'
'hazelcast_____hazelcast_____XMLConfigBuilderTest','com.hazelcast.config','com.hazelcast.config.XMLConfigBuilderTest.testXSDConfigXML(java.lang.String)','javax.xml.transform.stream.StreamSource.<init>'
'hazelcast_____hazelcast_____ClientDiscoverySpiTest','com.hazelcast.client.spi.impl.discovery','com.hazelcast.client.spi.impl.discovery.ClientDiscoverySpiTest.testSchema()','javax.xml.transform.stream.StreamSource.<init>'
'jenkinsci_____jenkins_____WebAppMain','hudson','hudson.WebAppMain.contextInitialized(javax.servlet.ServletContextEvent)','javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.TransformerFactory.getName javax.xml.transform.TransformerFactory.newInstance'
'deeplearning4j_____deeplearning4j_____Configuration','org.datavec.api.conf','org.datavec.api.conf.Configuration.writeXml(java.io.OutputStream)','javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.TransformerFactory.newTransformer javax.xml.transform.Transformer.transform'
'jenkinsci_____jenkins_____UpdateJobCommand','hudson.cli','hudson.cli.UpdateJobCommand.run()','javax.xml.transform.stream.StreamSource.<init>'
'orhanobut_____logger_____LoggerPrinter','com.orhanobut.logger','com.orhanobut.logger.LoggerPrinter.xml(java.lang.String)','javax.xml.transform.stream.StreamSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.Transformer.transform javax.xml.transform.stream.StreamResult.getWriter'
'elastic_____elasticsearch_____SamlUtils','org.elasticsearch.xpack.security.authc.saml','org.elasticsearch.xpack.security.authc.saml.SamlUtils.print(org.w3c.dom.Element,java.io.Writer,boolean)','javax.xml.transform.Transformer.setOutputProperty javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.Transformer.transform'
'elastic_____elasticsearch_____SamlUtils','org.elasticsearch.xpack.security.authc.saml','org.elasticsearch.xpack.security.authc.saml.SamlUtils.getHardenedXMLTransformer()','javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.TransformerFactory.setFeature javax.xml.transform.TransformerFactory.setAttribute javax.xml.transform.TransformerFactory.setAttribute javax.xml.transform.TransformerFactory.setAttribute javax.xml.transform.TransformerFactory.newTransformer javax.xml.transform.Transformer.setErrorListener'
'elastic_____elasticsearch_____SamlUtils','org.elasticsearch.xpack.security.authc.saml','org.elasticsearch.xpack.security.authc.saml.SamlUtils.validate(java.io.InputStream,java.lang.String)','javax.xml.transform.stream.StreamSource.<init> javax.xml.transform.stream.StreamSource.<init>'
'apereo_____cas_____SamlUtils','org.apereo.cas.support.saml','org.apereo.cas.support.saml.SamlUtils.transformSamlObject(org.apereo.cas.support.saml.OpenSamlConfigBean,org.opensaml.core.xml.XMLObject,boolean)','javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.TransformerFactory.newInstance'
'Activiti_____Activiti_____BpmnXMLConverter','org.activiti.bpmn.converter','org.activiti.bpmn.converter.BpmnXMLConverter.validateModel(org.activiti.bpmn.converter.util.InputStreamProvider)','javax.xml.transform.stream.StreamSource.<init>'
'Activiti_____Activiti_____BpmnXMLConverter','org.activiti.bpmn.converter','org.activiti.bpmn.converter.BpmnXMLConverter.validateModel(javax.xml.stream.XMLStreamReader)','javax.xml.transform.stax.StAXSource.<init>'
'jenkinsci_____jenkins_____View','hudson.model','hudson.model.View.doConfigDotXml(org.kohsuke.stapler.StaplerRequest)','javax.xml.transform.stream.StreamSource.<init>'
'jenkinsci_____jenkins_____View','hudson.model','hudson.model.View.updateByXml(javax.xml.transform.Source)','javax.xml.transform.stream.StreamResult.<init>'
'hazelcast_____hazelcast_____DiscoverySpiTest','com.hazelcast.spi.discovery','com.hazelcast.spi.discovery.DiscoverySpiTest.testSchema()','javax.xml.transform.stream.StreamSource.<init>'
'alibaba_____fastjson_____MiscCodec','com.alibaba.fastjson.serializer','com.alibaba.fastjson.serializer.MiscCodec.toString(UNRESOLVED.org.w3c.dom.Node)','javax.xml.transform.TransformerFactory.newInstance javax.xml.transform.TransformerFactory.newTransformer javax.xml.transform.dom.DOMSource.<init> javax.xml.transform.stream.StreamResult.<init> javax.xml.transform.Transformer.transform'
